{
   "openapi": "3.0.3",
   "info": {
      "version": "1.0.0",
      "title": "Slimmom API docs",
      "description": "API documentation for Node.js#2_Kharkiv project Slimmom. [Backend github repository](https://github.com/LeanNSP/slim-mom-back-end)",
      "license": {
         "name": "MIT",
         "url": "https://opensource.org/licenses/MIT"
      }
   },
   "servers": [{ "url": "http://localhost:3100/api-docs" }],
   "consumes": ["application/json"],
   "produces": ["application/json"],
   "tags": [
      {
         "name": "Auth",
         "description": "Authorization endpoints"
      },
      {
         "name": "Daily-rate",
         "description": "Daily-rate endpoints"
      },
      {
         "name": "Products",
         "description": "Get products endpoints"
      },
      {
         "name": "Day",
         "description": "Day endpoints"
      },
      {
         "name": "User",
         "description": "User endpoints"
      }
   ],
   "paths": {
      "/auth/register": {
         "post": {
            "tags": ["Auth"],
            "summary": "User registration",
            "parameters": [],
            "requestBody": {
               "description": "Registration's object",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/RegistrationRequest"
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Created",
                  "content": {}
               },
               "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
               },
               "409": {
                  "description": "Provided email already exists",
                  "content": {}
               }
            }
         }
      },
      "/auth/login": {
         "post": {
            "tags": ["Auth"],
            "summary": "User authentication",
            "parameters": [],
            "requestBody": {
               "description": "Authentication's object",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/LoginRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/LoginResponse"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
               },
               "403": {
                  "description": "Email doesn't exist / Password is wrong",
                  "content": {}
               }
            }
         }
      },
      "/auth/logout": {
         "post": {
            "tags": ["Auth"],
            "summary": "Logout",
            "security": [{ "Bearer": [] }],
            "parameters": [],
            "responses": {
               "204": {
                  "description": "Successful operation"
               },
               "400": {
                  "description": "No token provided",
                  "content": {}
               },
               "401": {
                  "description": "Unauthorized (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Invalid user / Invalid session",
                  "content": {}
               }
            }
         }
      },
      "/daily-rate": {
         "post": {
            "tags": ["Daily-rate"],
            "summary": "Get daily rate information based on your characteristics",
            "parameters": [],
            "requestBody": {
               "description": "Object with user's characteristics",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DailyRateRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DailyRateResponse"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
               }
            }
         }
      },
      "/daily-rate/{userId}": {
         "post": {
            "tags": ["Daily-rate"],
            "summary": "Post your characteristics to the website and get daily rate information",
            "security": [{ "Bearer": [] }],
            "parameters": [
               {
                  "name": "userId",
                  "in": "path",
                  "description": "Id of the user",
                  "required": true,
                  "type": "string"
               }
            ],
            "requestBody": {
               "description": "Object with user's characteristics",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DailyRateRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DailyRateWithUserIdResponse"
                        }
                     }
                  }
               },
               "400": {
                  "description": "No token provided",
                  "content": {}
               },
               "401": {
                  "description": "User not authorized (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Invalid id / Invalid session",
                  "content": {}
               }
            }
         }
      },
      "/product": {
         "get": {
            "tags": ["Products"],
            "summary": "Search and get a list of products on request",
            "security": [{ "Bearer": [] }],
            "parameters": [
               {
                  "name": "search",
                  "in": "query",
                  "description": "Name of the product (in russian) that you want to find",
                  "required": true
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/ProductResponse"
                        }
                     }
                  }
               },
               "401": {
                  "description": "User not authorized  (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Invalid query name / Not validations token",
                  "content": {}
               }
            }
         }
      },
      "/day": {
         "post": {
            "tags": ["Day"],
            "summary": "Post an eaten product",
            "security": [{ "Bearer": [] }],
            "parameters": [],
            "requestBody": {
               "description": "Object with date and eaten product's id",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/PostDayRequest"
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/PostDayResponse"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad request (invalid request body) / No token provided",
                  "content": {}
               },
               "401": {
                  "description": "User not authorized (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Product not found / Habit not found / Invalid user / Invalid session",
                  "content": {}
               }
            }
         },
         "delete": {
            "tags": ["Day"],
            "summary": "Delete eaten product",
            "security": [{ "Bearer": [] }],
            "parameters": [],
            "requestBody": {
               "description": "Object with eaten product's id you want to delete",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DeleteDayRequest"
                     }
                  }
               }
            },
            "responses": {
               "201": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DeleteDayResponse"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad request (invalid request body) / No token provided",
                  "content": {}
               },
               "401": {
                  "description": "Unauthorized (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Product not found / Day not found / Invalid user / Invalid session",
                  "content": {}
               }
            }
         }
      },
      "/day/info": {
         "post": {
            "tags": ["Day"],
            "summary": "Get info for day",
            "security": [{ "Bearer": [] }],
            "parameters": [],
            "requestBody": {
               "description": "Object with date of the day you want to get info for",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/GetDayRequest"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/GetDayResponse"
                        }
                     }
                  }
               },
               "400": {
                  "description": "Bad request (invalid request body) / No token provided",
                  "content": {}
               },
               "401": {
                  "description": "User's not authorized (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Invalid user / Invalid session",
                  "content": {}
               }
            }
         }
      },
      "/user": {
         "get": {
            "tags": ["User"],
            "summary": "Get user info",
            "security": [{ "Bearer": [] }],
            "parameters": [],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/GetUserInfo"
                        }
                     }
                  }
               },
               "400": {
                  "description": "No token provided",
                  "content": {}
               },
               "401": {
                  "description": "Unauthorized (invalid access token)",
                  "content": {}
               },
               "404": {
                  "description": "Invalid user / Invalid session",
                  "content": {}
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "RegistrationRequest": {
            "required": ["email", "password", "name"],
            "type": "object",
            "properties": {
               "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
               },
               "password": {
                  "type": "string",
                  "description": "User's password",
                  "example": "123qwe"
               },
               "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "Nina"
               }
            }
         },
         "LoginRequest": {
            "required": ["email", "password"],
            "type": "object",
            "properties": {
               "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
               },
               "password": {
                  "type": "string",
                  "description": "User's password",
                  "example": "qwerty123"
               }
            }
         },
         "LoginResponse": {
            "type": "object",
            "properties": {
               "accessToken": {
                  "type": "string",
                  "description": "Session's access token (needed for all requests)",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
               },
               "refreshToken": {
                  "type": "string",
                  "description": "Session's refresh token (needed for /auth/refresh)",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXB"
               },
               "sid": {
                  "type": "string",
                  "description": "Session's id (needed for /auth/refresh)",
                  "example": "5feaae49ac348a44e08b76ae"
               },
               "todaySummary": {
                  "type": "array",
                  "description": "Today's summary (could be empty if no summary for today exists)",
                  "items": {
                     "type": "object",
                     "properties": {
                        "id": {
                           "type": "ObjectId",
                           "description": "Day summary's id",
                           "example": "5febe675d043b8366847a43e"
                        },
                        "date": {
                           "type": "string",
                           "description": "Day's date",
                           "example": "2020-12-30"
                        }
                     }
                  }
               },
               "user": {
                  "type": "object",
                  "description": "User's data",
                  "properties": {
                     "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                     },
                     "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Emma"
                     },
                     "userData": {
                        "type": "object",
                        "description": "User's daily rate data",
                        "properties": {
                           "weight": {
                              "type": "number",
                              "description": "User's weight (kg)",
                              "minimum": 20,
                              "maximum": 500,
                              "example": 80
                           },
                           "height": {
                              "type": "number",
                              "description": "User's height (cm)",
                              "minimum": 100,
                              "maximum": 250,
                              "example": 180
                           },
                           "age": {
                              "type": "number",
                              "description": "User's age",
                              "minimum": 18,
                              "maximum": 100,
                              "example": 25
                           },
                           "bloodType": {
                              "type": "number",
                              "description": "User's blood type",
                              "enum": [1, 2, 3, 4]
                           },
                           "desiredWeight": {
                              "type": "number",
                              "description": "User's desired weight",
                              "minimum": 20,
                              "maximum": 500,
                              "example": 60
                           },
                           "dailyRate": {
                              "type": "string",
                              "description": "Your daily rate in kcal",
                              "example": 2000
                           }
                        }
                     },
                     "_id": {
                        "type": "ObjectId",
                        "description": "User's id",
                        "example": "5feaae49ac348a44e08b76ae"
                     }
                  }
               }
            }
         },
         "DailyRateRequest": {
            "required": ["weight", "height", "age", "desiredWeight", "bloodType"],
            "type": "object",
            "properties": {
               "weight": {
                  "type": "number",
                  "description": "User's weight (kg)",
                  "minimum": 20,
                  "maximum": 500,
                  "example": 100
               },
               "height": {
                  "type": "number",
                  "description": "User's height (cm)",
                  "minimum": 100,
                  "maximum": 250,
                  "example": 170
               },
               "age": {
                  "type": "number",
                  "description": "User's age",
                  "minimum": 18,
                  "maximum": 100,
                  "example": 30
               },
               "desiredWeight": {
                  "type": "number",
                  "description": "User's desired weight",
                  "minimum": 20,
                  "maximum": 500,
                  "example": 60
               },
               "bloodType": {
                  "type": "number",
                  "description": "User's blood type",
                  "enum": [1, 2, 3, 4]
               }
            }
         },
         "DailyRateResponse": {
            "type": "object",
            "properties": {
               "dailyRate": {
                  "type": "number",
                  "description": "Daily rate in kcal",
                  "example": 1289
               },
               "notAllowedProducts": {
                  "type": "array",
                  "items": {
                     "type": "string",
                     "description": "Not allowed product",
                     "example": ["Яйцо куриное (желток сухой)"]
                  }
               }
            }
         },
         "DailyRateWithUserIdResponse": {
            "type": "object",
            "properties": {
               "_id": {
                  "type": "string",
                  "description": "User's id",
                  "example": "5feaae49ac348a44e08b76ae"
               },
               "daySummary": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "description": "Updated summary",
                     "properties": {
                        "kcalLeft": {
                           "type": "number",
                           "description": "Kcal left to consume",
                           "example": 1318
                        },
                        "kcalConsumed": {
                           "type": "number",
                           "description": "Kcal consumed",
                           "example": 96
                        },
                        "dailyRate": {
                           "type": "number",
                           "description": "Daily rate in kcal",
                           "example": 1414
                        },
                        "percentsOfDailyRate": {
                           "type": "number",
                           "description": "Percents consumed of daily rate",
                           "example": 6.789250353606789
                        }
                     }
                  }
               },
               "notAllowedProducts": {
                  "type": "array",
                  "description": "User's not allowed products (based on blood type)",
                  "items": {
                     "type": "string",
                     "description": "Not allowed product",
                     "example": "Яйцо куриное (желток сухой)"
                  }
               },
               "eatenProducts": {
                  "type": "array",
                  "description": "User's  eaten products",
                  "items": {
                     "type": "object",
                     "description": "eaten products",
                     "properties": {
                        "_id": {
                           "type": "string",
                           "description": "User's id",
                           "example": "5feaae49ac348a44e08b76ae"
                        },
                        "title": {
                           "type": "string",
                           "description": "product name",
                           "example": "Банановый сок"
                        },
                        "weight": {
                           "type": "number",
                           "description": "User's weight (kg)",
                           "example": 200
                        },
                        "kcal": {
                           "type": "number",
                           "description": "Kcal left to consume",
                           "example": 96
                        }
                     }
                  }
               },
               "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-31"
               },
               "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
               }
            },
            "ProductResponse": {
               "type": "array",
               "items": {
                  "type": "object",
                  "properties": {
                     "_id": {
                        "type": "string",
                        "description": "Product's id",
                        "example": "507f1f77bcf86cd799439011"
                     },
                     "categories": {
                        "type": "array",
                        "items": {
                           "type": "string",
                           "description": "Product's category",
                           "example": "яйца"
                        }
                     },
                     "weight": {
                        "type": "number",
                        "description": "Product's weight (100g)",
                        "example": 100
                     },
                     "title": {
                        "type": "object",
                        "description": "Product's russian and ukrainian titles",
                        "properties": {
                           "ru": {
                              "type": "string",
                              "example": "Меланж яичный"
                           },
                           "ua": {
                              "type": "string",
                              "example": "Меланж яєчний"
                           }
                        }
                     },
                     "calories": {
                        "type": "number",
                        "description": "Product's kcal for 100g",
                        "example": 157
                     },
                     "groupBloodNotAllowed": {
                        "type": "array",
                        "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
                        "items": {
                           "oneOf": [{ "type": "null" }, { "type": "boolean" }]
                        },
                        "example": [null, true, false, false, false]
                     },
                     "__v": {
                        "type": "integer",
                        "description": "MongoDB document service versionKey (ignore)"
                     }
                  }
               }
            }
         },
         "ProductResponse": {
            "type": "array",
            "items": {
               "type": "object",
               "properties": {
                  "_id": {
                     "type": "string",
                     "description": "Product's id",
                     "example": "5d51694802b2373622ff5549"
                  },
                  "categories": {
                     "type": "array",
                     "items": {
                        "type": "string",
                        "description": "Product's category",
                        "example": "зерновые"
                     }
                  },
                  "weight": {
                     "type": "number",
                     "description": "Product's weight (100g)",
                     "example": 100
                  },
                  "title": {
                     "type": "object",
                     "description": "Product's russian and ukrainian titles",
                     "properties": {
                        "ru": {
                           "type": "string",
                           "example": "Булгур приготовленный"
                        }
                     }
                  },
                  "calories": {
                     "type": "number",
                     "description": "Product's kcal for 100g",
                     "example": 83
                  },
                  "groupBloodNotAllowed": {
                     "type": "array",
                     "description": "Product's allowed/not allowed status on all blood types (first item is null - 0 index in array)",
                     "items": {
                        "oneOf": [{ "type": "null" }, { "type": "boolean" }]
                     },
                     "example": [null, true, false, false, false]
                  },
                  "__v": {
                     "type": "integer",
                     "description": "MongoDB document service versionKey (ignore)"
                  }
               }
            }
         },
         "PostDayRequest": {
            "type": "object",
            "required": ["date", "productId", "weight"],
            "properties": {
               "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-30"
               },
               "productId": {
                  "type": "string",
                  "description": "Product's id",
                  "example": "5d51694802b2373622ff552d"
               },
               "weight": {
                  "type": "number",
                  "description": "Product's weight",
                  "example": 200
               }
            }
         },
         "PostDayResponse": {
            "type": "object",
            "properties": {
               "_id": {
                  "type": "string",
                  "description": "User's id",
                  "example": "5feaae49ac348a44e08b76ae"
               },
               "daySummary": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "description": "Updated summary",
                     "properties": {
                        "kcalLeft": {
                           "type": "number",
                           "description": "Kcal left to consume",
                           "example": 1318
                        },
                        "kcalConsumed": {
                           "type": "number",
                           "description": "Kcal consumed",
                           "example": 96
                        },
                        "dailyRate": {
                           "type": "number",
                           "description": "Daily rate in kcal",
                           "example": 1414
                        },
                        "percentsOfDailyRate": {
                           "type": "number",
                           "description": "Percents consumed of daily rate",
                           "example": 6.789250353606789
                        }
                     }
                  }
               },
               "notAllowedProducts": {
                  "type": "array",
                  "description": "User's not allowed products (based on blood type)",
                  "items": {
                     "type": "string",
                     "description": "Not allowed product",
                     "example": "Яйцо куриное (желток сухой)"
                  }
               },
               "eatenProducts": {
                  "type": "array",
                  "description": "User's  eaten products",
                  "items": {
                     "type": "object",
                     "description": "eaten products",
                     "properties": {
                        "_id": {
                           "type": "string",
                           "description": "User's id",
                           "example": "5feaae49ac348a44e08b76ae"
                        },
                        "title": {
                           "type": "string",
                           "description": "product name",
                           "example": "Банановый сок"
                        },
                        "weight": {
                           "type": "number",
                           "description": "User's weight (kg)",
                           "example": 200
                        },
                        "kcal": {
                           "type": "number",
                           "description": "Kcal left to consume",
                           "example": 96
                        }
                     }
                  }
               },
               "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-31"
               },
               "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
               }
            }
         },
         "DeleteDayRequest": {
            "type": "object",
            "required": ["dayId", "eatenProductId"],
            "properties": {
               "dayId": {
                  "type": "string",
                  "description": "Day's id",
                  "example": "5feab238ac348a44e08b76b0"
               },
               "eatenProductId": {
                  "type": "string",
                  "description": "Eaten product's id",
                  "example": "5feaa504ac348a44e08b76ac"
               }
            }
         },
         "DeleteDayResponse": {
            "type": "object",
            "description": "Updated summary",
            "properties": {
               "kcalLeft": {
                  "type": "number",
                  "description": "Kcal left to consume",
                  "example": 357.5
               },
               "kcalConsumed": {
                  "type": "number",
                  "description": "Kcal consumed",
                  "example": 1044
               },
               "dailyRate": {
                  "type": "number",
                  "description": "Daily rate in kcal",
                  "example": 1401.5
               },
               "percentsOfDailyRate": {
                  "type": "number",
                  "description": "Percents consumed of daily rate",
                  "example": 74.49161612557974
               }
            }
         },
         "GetDayRequest": {
            "type": "object",
            "required": ["date"],
            "properties": {
               "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-30"
               }
            }
         },
         "GetDayResponse": {
            "type": "object",
            "description": "Day (or newDay) when the product was eaten",
            "properties": {
               "_id": {
                  "type": "string",
                  "description": "Day's id",
                  "example": "507f1f77bcf86cd799439011"
               },
               "eatenProducts": {
                  "type": "array",
                  "items": {
                     "type": "object",
                     "properties": {
                        "title": {
                           "type": "string",
                           "description": "Eaten product's description",
                           "example": "Банановый сокй"
                        },
                        "weight": {
                           "type": "number",
                           "description": "Eaten product's weight",
                           "example": 200
                        },
                        "kcal": {
                           "type": "number",
                           "description": "kcal consumed",
                           "example": 96
                        },
                        "_id": {
                           "type": "string",
                           "description": "Eaten product's id",
                           "example": "5fec05618453650504313dba"
                        }
                     }
                  }
               },
               "date": {
                  "type": "string",
                  "description": "Day's date",
                  "example": "2020-12-30"
               },
               "notAllowedProducts": {
                  "type": "array",
                  "description": "User's not allowed products (based on blood type)",
                  "items": {
                     "type": "string",
                     "description": "Not allowed product",
                     "example": "Яйцо куриное (желток сухой)"
                  }
               },
               "daySummary": {
                  "type": "object",
                  "description": "Day's summary",
                  "properties": {
                     "kcalLeft": {
                        "type": "number",
                        "description": "Kcal left to consume",
                        "example": 950
                     },
                     "kcalConsumed": {
                        "type": "number",
                        "description": "Kcal consumed",
                        "example": 464
                     },
                     "dailyRate": {
                        "type": "number",
                        "description": "Daily rate in kcal",
                        "example": 1414
                     },
                     "percentsOfDailyRate": {
                        "type": "number",
                        "description": "Percents consumed of daily rate",
                        "example": 32.81471
                     }
                  }
               },
               "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
               }
            }
         },
         "GetUserInfo": {
            "type": "object",
            "description": "User's information",
            "properties": {
               "status": {
                  "type": "string",
                  "description": "User's status",
                  "example": "Created"
               },
               "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
               },
               "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "Emma"
               },
               "password": {
                  "type": "string",
                  "description": "Password hash",
                  "example": "$2a$04$KOMWhOSub75YFXe331KI7umG.HpIAHQhfuFFZ8NcadikE0zCIVKUS"
               },
               "__v": {
                  "type": "integer",
                  "description": "MongoDB document service versionKey (ignore)"
               },
               "_id": {
                  "type": "string",
                  "description": "User's id",
                  "example": "507f1f77bcf86cd799439011"
               },
               "userData": {
                  "type": "object",
                  "description": "User's daily rate data",
                  "properties": {
                     "weight": {
                        "type": "number",
                        "description": "User's weight (kg)",
                        "minimum": 20,
                        "maximum": 500,
                        "example": 100
                     },
                     "height": {
                        "type": "number",
                        "description": "User's height (cm)",
                        "minimum": 100,
                        "maximum": 250,
                        "example": 180
                     },
                     "age": {
                        "type": "number",
                        "description": "User's age",
                        "minimum": 18,
                        "maximum": 100,
                        "example": 30
                     },
                     "bloodType": {
                        "type": "number",
                        "description": "User's blood type",
                        "enum": [1, 2, 3, 4]
                     },
                     "desiredWeight": {
                        "type": "number",
                        "description": "User's desired weight",
                        "minimum": 20,
                        "maximum": 500,
                        "example": 60
                     },
                     "dailyRate": {
                        "type": "string",
                        "description": "Your daily rate in kcal",
                        "example": 1414
                     }
                  }
               },
               "days": {
                  "type": "array",
                  "description": "Days array",
                  "items": {
                     "type": "object",
                     "description": "Day",
                     "properties": {
                        "_id": {
                           "type": "string",
                           "description": "Day's id",
                           "example": "5feab238ac348a44e08b76b0"
                        },
                        "date": {
                           "type": "string",
                           "description": "Day's date",
                           "example": "2020-12-30"
                        }
                     }
                  }
               },
               "accessToken": {
                  "type": "string",
                  "description": "Session's access token (needed for all requests)",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
               },
               "refreshToken": {
                  "type": "string",
                  "description": "Session's refresh token (needed for /auth/refresh)",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXB"
               },
               "sid": {
                  "type": "string",
                  "description": "Session's id (needed for /auth/refresh)",
                  "example": "5feaae49ac348a44e08b76ae"
               }
            }
         }
      }
   },
   "securitySchemes": {
      "Bearer": {
         "type": "http",
         "scheme": "bearer",
         "bearerFormat": "JWT"
      }
   }
}
